//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CCModel", "FK_Book_ItemID", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.Item), "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CollectorzCorner.Book), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_CollectionItem_CollectionID", "Collection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.Collection), "CollectionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.CollectionItem), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_CollectionItem_CollectionItemStatus", "CollectionItemStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.CollectionItemStatu), "CollectionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.CollectionItem), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_CollectionItem_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.Item), "CollectionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.CollectionItem), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Collection_TypeID", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.ItemType), "Collection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Collection), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Collection_UserID", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.User), "Collection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Collection), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_ComicBook_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.Item), "ComicBook", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CollectorzCorner.ComicBook), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Game_ContentRatingID", "ContentRating", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CollectorzCorner.ContentRating), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Game), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Movie_ItemID", "ContentRating", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CollectorzCorner.ContentRating), "Movy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Movie), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Game_ItemID", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.Item), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CollectorzCorner.Game), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Game_Platform", "Platform", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.Platform), "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Game), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Genre_ItemType", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CollectorzCorner.ItemType), "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Genre), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Item_ItemType", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CollectorzCorner.ItemType), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Item), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Item_PictureID", "Picture", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CollectorzCorner.Picture), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Item), true)]
[assembly: EdmRelationshipAttribute("CCModel", "FK_Item_Series", "Series", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CollectorzCorner.Series), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Item), true)]
[assembly: EdmRelationshipAttribute("CCModel", "ItemGenre", "Genre", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Genre), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CollectorzCorner.Item))]

#endregion

namespace CollectorzCorner
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CCEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CCEntities object using the connection string found in the 'CCEntities' section of the application configuration file.
        /// </summary>
        public CCEntities() : base("name=CCEntities", "CCEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CCEntities object.
        /// </summary>
        public CCEntities(string connectionString) : base(connectionString, "CCEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CCEntities object.
        /// </summary>
        public CCEntities(EntityConnection connection) : base(connection, "CCEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Book>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Book> _Books;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CollectionItem> CollectionItems
        {
            get
            {
                if ((_CollectionItems == null))
                {
                    _CollectionItems = base.CreateObjectSet<CollectionItem>("CollectionItems");
                }
                return _CollectionItems;
            }
        }
        private ObjectSet<CollectionItem> _CollectionItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CollectionItemStatu> CollectionItemStatus
        {
            get
            {
                if ((_CollectionItemStatus == null))
                {
                    _CollectionItemStatus = base.CreateObjectSet<CollectionItemStatu>("CollectionItemStatus");
                }
                return _CollectionItemStatus;
            }
        }
        private ObjectSet<CollectionItemStatu> _CollectionItemStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Collection> Collections
        {
            get
            {
                if ((_Collections == null))
                {
                    _Collections = base.CreateObjectSet<Collection>("Collections");
                }
                return _Collections;
            }
        }
        private ObjectSet<Collection> _Collections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ComicBook> ComicBooks
        {
            get
            {
                if ((_ComicBooks == null))
                {
                    _ComicBooks = base.CreateObjectSet<ComicBook>("ComicBooks");
                }
                return _ComicBooks;
            }
        }
        private ObjectSet<ComicBook> _ComicBooks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContentRating> ContentRatings
        {
            get
            {
                if ((_ContentRatings == null))
                {
                    _ContentRatings = base.CreateObjectSet<ContentRating>("ContentRatings");
                }
                return _ContentRatings;
            }
        }
        private ObjectSet<ContentRating> _ContentRatings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemType> ItemTypes
        {
            get
            {
                if ((_ItemTypes == null))
                {
                    _ItemTypes = base.CreateObjectSet<ItemType>("ItemTypes");
                }
                return _ItemTypes;
            }
        }
        private ObjectSet<ItemType> _ItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Movie> Movies
        {
            get
            {
                if ((_Movies == null))
                {
                    _Movies = base.CreateObjectSet<Movie>("Movies");
                }
                return _Movies;
            }
        }
        private ObjectSet<Movie> _Movies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Picture> Pictures
        {
            get
            {
                if ((_Pictures == null))
                {
                    _Pictures = base.CreateObjectSet<Picture>("Pictures");
                }
                return _Pictures;
            }
        }
        private ObjectSet<Picture> _Pictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Platform> Platforms
        {
            get
            {
                if ((_Platforms == null))
                {
                    _Platforms = base.CreateObjectSet<Platform>("Platforms");
                }
                return _Platforms;
            }
        }
        private ObjectSet<Platform> _Platforms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Series> Series
        {
            get
            {
                if ((_Series == null))
                {
                    _Series = base.CreateObjectSet<Series>("Series");
                }
                return _Series;
            }
        }
        private ObjectSet<Series> _Series;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Books EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBooks(Book book)
        {
            base.AddObject("Books", book);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CollectionItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollectionItems(CollectionItem collectionItem)
        {
            base.AddObject("CollectionItems", collectionItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CollectionItemStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollectionItemStatus(CollectionItemStatu collectionItemStatu)
        {
            base.AddObject("CollectionItemStatus", collectionItemStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Collections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCollections(Collection collection)
        {
            base.AddObject("Collections", collection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ComicBooks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComicBooks(ComicBook comicBook)
        {
            base.AddObject("ComicBooks", comicBook);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContentRatings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContentRatings(ContentRating contentRating)
        {
            base.AddObject("ContentRatings", contentRating);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTypes(ItemType itemType)
        {
            base.AddObject("ItemTypes", itemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Movies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovies(Movie movie)
        {
            base.AddObject("Movies", movie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPictures(Picture picture)
        {
            base.AddObject("Pictures", picture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Platforms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatforms(Platform platform)
        {
            base.AddObject("Platforms", platform);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Series EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeries(Series series)
        {
            base.AddObject("Series", series);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="author">Initial value of the Author property.</param>
        /// <param name="isEBook">Initial value of the IsEBook property.</param>
        public static Book CreateBook(global::System.Int32 itemID, global::System.String author, global::System.Boolean isEBook)
        {
            Book book = new Book();
            book.ItemID = itemID;
            book.Author = author;
            book.IsEBook = isEBook;
            return book;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Author
        {
            get
            {
                return _Author;
            }
            set
            {
                OnAuthorChanging(value);
                ReportPropertyChanging("Author");
                _Author = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Author");
                OnAuthorChanged();
            }
        }
        private global::System.String _Author;
        partial void OnAuthorChanging(global::System.String value);
        partial void OnAuthorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Illustrator
        {
            get
            {
                return _Illustrator;
            }
            set
            {
                OnIllustratorChanging(value);
                ReportPropertyChanging("Illustrator");
                _Illustrator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Illustrator");
                OnIllustratorChanged();
            }
        }
        private global::System.String _Illustrator;
        partial void OnIllustratorChanging(global::System.String value);
        partial void OnIllustratorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Editor
        {
            get
            {
                return _Editor;
            }
            set
            {
                OnEditorChanging(value);
                ReportPropertyChanging("Editor");
                _Editor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Editor");
                OnEditorChanged();
            }
        }
        private global::System.String _Editor;
        partial void OnEditorChanging(global::System.String value);
        partial void OnEditorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Plot
        {
            get
            {
                return _Plot;
            }
            set
            {
                OnPlotChanging(value);
                ReportPropertyChanging("Plot");
                _Plot = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Plot");
                OnPlotChanged();
            }
        }
        private global::System.String _Plot;
        partial void OnPlotChanging(global::System.String value);
        partial void OnPlotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NoOfPages
        {
            get
            {
                return _NoOfPages;
            }
            set
            {
                OnNoOfPagesChanging(value);
                ReportPropertyChanging("NoOfPages");
                _NoOfPages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoOfPages");
                OnNoOfPagesChanged();
            }
        }
        private Nullable<global::System.Int32> _NoOfPages;
        partial void OnNoOfPagesChanging(Nullable<global::System.Int32> value);
        partial void OnNoOfPagesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReadLevel
        {
            get
            {
                return _ReadLevel;
            }
            set
            {
                OnReadLevelChanging(value);
                ReportPropertyChanging("ReadLevel");
                _ReadLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReadLevel");
                OnReadLevelChanged();
            }
        }
        private global::System.String _ReadLevel;
        partial void OnReadLevelChanging(global::System.String value);
        partial void OnReadLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                OnISBNChanging(value);
                ReportPropertyChanging("ISBN");
                _ISBN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISBN");
                OnISBNChanged();
            }
        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEBook
        {
            get
            {
                return _IsEBook;
            }
            set
            {
                OnIsEBookChanging(value);
                ReportPropertyChanging("IsEBook");
                _IsEBook = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEBook");
                OnIsEBookChanged();
            }
        }
        private global::System.Boolean _IsEBook;
        partial void OnIsEBookChanging(global::System.Boolean value);
        partial void OnIsEBookChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Book_ItemID", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_Book_ItemID", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_Book_ItemID", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_Book_ItemID", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("CCModel.FK_Book_ItemID", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Collection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Collection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Collection object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="isPublic">Initial value of the IsPublic property.</param>
        /// <param name="isComplete">Initial value of the IsComplete property.</param>
        public static Collection CreateCollection(global::System.Int32 id, global::System.String name, global::System.String typeID, global::System.Int32 userID, global::System.Boolean isPublic, global::System.Boolean isComplete)
        {
            Collection collection = new Collection();
            collection.ID = id;
            collection.Name = name;
            collection.TypeID = typeID;
            collection.UserID = userID;
            collection.IsPublic = isPublic;
            collection.IsComplete = isComplete;
            return collection;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.String _TypeID;
        partial void OnTypeIDChanging(global::System.String value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPublic
        {
            get
            {
                return _IsPublic;
            }
            set
            {
                OnIsPublicChanging(value);
                ReportPropertyChanging("IsPublic");
                _IsPublic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPublic");
                OnIsPublicChanged();
            }
        }
        private global::System.Boolean _IsPublic;
        partial void OnIsPublicChanging(global::System.Boolean value);
        partial void OnIsPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsComplete
        {
            get
            {
                return _IsComplete;
            }
            set
            {
                OnIsCompleteChanging(value);
                ReportPropertyChanging("IsComplete");
                _IsComplete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsComplete");
                OnIsCompleteChanged();
            }
        }
        private global::System.Boolean _IsComplete;
        partial void OnIsCompleteChanging(global::System.Boolean value);
        partial void OnIsCompleteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_CollectionItem_CollectionID", "CollectionItem")]
        public EntityCollection<CollectionItem> CollectionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionItem>("CCModel.FK_CollectionItem_CollectionID", "CollectionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionItem>("CCModel.FK_CollectionItem_CollectionID", "CollectionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Collection_TypeID", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Collection_TypeID", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Collection_TypeID", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Collection_TypeID", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("CCModel.FK_Collection_TypeID", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Collection_UserID", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CCModel.FK_Collection_UserID", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CCModel.FK_Collection_UserID", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("CCModel.FK_Collection_UserID", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("CCModel.FK_Collection_UserID", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="CollectionItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CollectionItem object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="collectionID">Initial value of the CollectionID property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        public static CollectionItem CreateCollectionItem(global::System.Int32 itemID, global::System.Int32 collectionID, global::System.String statusID)
        {
            CollectionItem collectionItem = new CollectionItem();
            collectionItem.ItemID = itemID;
            collectionItem.CollectionID = collectionID;
            collectionItem.StatusID = statusID;
            return collectionItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionID
        {
            get
            {
                return _CollectionID;
            }
            set
            {
                if (_CollectionID != value)
                {
                    OnCollectionIDChanging(value);
                    ReportPropertyChanging("CollectionID");
                    _CollectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionID");
                    OnCollectionIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionID;
        partial void OnCollectionIDChanging(global::System.Int32 value);
        partial void OnCollectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.String _StatusID;
        partial void OnStatusIDChanging(global::System.String value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private Nullable<global::System.Byte> _Rating;
        partial void OnRatingChanging(Nullable<global::System.Byte> value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Review
        {
            get
            {
                return _Review;
            }
            set
            {
                OnReviewChanging(value);
                ReportPropertyChanging("Review");
                _Review = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Review");
                OnReviewChanged();
            }
        }
        private global::System.String _Review;
        partial void OnReviewChanging(global::System.String value);
        partial void OnReviewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusNote
        {
            get
            {
                return _StatusNote;
            }
            set
            {
                OnStatusNoteChanging(value);
                ReportPropertyChanging("StatusNote");
                _StatusNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusNote");
                OnStatusNoteChanged();
            }
        }
        private global::System.String _StatusNote;
        partial void OnStatusNoteChanging(global::System.String value);
        partial void OnStatusNoteChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_CollectionItem_CollectionID", "Collection")]
        public Collection Collection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collection>("CCModel.FK_CollectionItem_CollectionID", "Collection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collection>("CCModel.FK_CollectionItem_CollectionID", "Collection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Collection> CollectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Collection>("CCModel.FK_CollectionItem_CollectionID", "Collection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Collection>("CCModel.FK_CollectionItem_CollectionID", "Collection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_CollectionItem_CollectionItemStatus", "CollectionItemStatu")]
        public CollectionItemStatu CollectionItemStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionItemStatu>("CCModel.FK_CollectionItem_CollectionItemStatus", "CollectionItemStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionItemStatu>("CCModel.FK_CollectionItem_CollectionItemStatus", "CollectionItemStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionItemStatu> CollectionItemStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionItemStatu>("CCModel.FK_CollectionItem_CollectionItemStatus", "CollectionItemStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionItemStatu>("CCModel.FK_CollectionItem_CollectionItemStatus", "CollectionItemStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_CollectionItem_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_CollectionItem_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_CollectionItem_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_CollectionItem_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("CCModel.FK_CollectionItem_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="CollectionItemStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionItemStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CollectionItemStatu object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static CollectionItemStatu CreateCollectionItemStatu(global::System.String id, global::System.String description)
        {
            CollectionItemStatu collectionItemStatu = new CollectionItemStatu();
            collectionItemStatu.ID = id;
            collectionItemStatu.Description = description;
            return collectionItemStatu;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_CollectionItem_CollectionItemStatus", "CollectionItem")]
        public EntityCollection<CollectionItem> CollectionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionItem>("CCModel.FK_CollectionItem_CollectionItemStatus", "CollectionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionItem>("CCModel.FK_CollectionItem_CollectionItemStatus", "CollectionItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="ComicBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ComicBook : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComicBook object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="writer">Initial value of the Writer property.</param>
        public static ComicBook CreateComicBook(global::System.Int32 itemID, global::System.String writer)
        {
            ComicBook comicBook = new ComicBook();
            comicBook.ItemID = itemID;
            comicBook.Writer = writer;
            return comicBook;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Writer
        {
            get
            {
                return _Writer;
            }
            set
            {
                OnWriterChanging(value);
                ReportPropertyChanging("Writer");
                _Writer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Writer");
                OnWriterChanged();
            }
        }
        private global::System.String _Writer;
        partial void OnWriterChanging(global::System.String value);
        partial void OnWriterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Colorist
        {
            get
            {
                return _Colorist;
            }
            set
            {
                OnColoristChanging(value);
                ReportPropertyChanging("Colorist");
                _Colorist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Colorist");
                OnColoristChanged();
            }
        }
        private global::System.String _Colorist;
        partial void OnColoristChanging(global::System.String value);
        partial void OnColoristChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CoverArtist
        {
            get
            {
                return _CoverArtist;
            }
            set
            {
                OnCoverArtistChanging(value);
                ReportPropertyChanging("CoverArtist");
                _CoverArtist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CoverArtist");
                OnCoverArtistChanged();
            }
        }
        private global::System.String _CoverArtist;
        partial void OnCoverArtistChanging(global::System.String value);
        partial void OnCoverArtistChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Editor
        {
            get
            {
                return _Editor;
            }
            set
            {
                OnEditorChanging(value);
                ReportPropertyChanging("Editor");
                _Editor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Editor");
                OnEditorChanged();
            }
        }
        private global::System.String _Editor;
        partial void OnEditorChanging(global::System.String value);
        partial void OnEditorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_ComicBook_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_ComicBook_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_ComicBook_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_ComicBook_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("CCModel.FK_ComicBook_Item", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="ContentRating")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContentRating : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContentRating object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static ContentRating CreateContentRating(global::System.String id, global::System.String description, global::System.String type)
        {
            ContentRating contentRating = new ContentRating();
            contentRating.ID = id;
            contentRating.Description = description;
            contentRating.Type = type;
            return contentRating;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Game_ContentRatingID", "Game")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("CCModel.FK_Game_ContentRatingID", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("CCModel.FK_Game_ContentRatingID", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Movie_ItemID", "Movy")]
        public EntityCollection<Movie> Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Movie>("CCModel.FK_Movie_ItemID", "Movy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Movie>("CCModel.FK_Movie_ItemID", "Movy", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Game object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="platformID">Initial value of the PlatformID property.</param>
        public static Game CreateGame(global::System.Int32 itemID, global::System.Int32 platformID)
        {
            Game game = new Game();
            game.ItemID = itemID;
            game.PlatformID = platformID;
            return game;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Developer
        {
            get
            {
                return _Developer;
            }
            set
            {
                OnDeveloperChanging(value);
                ReportPropertyChanging("Developer");
                _Developer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Developer");
                OnDeveloperChanged();
            }
        }
        private global::System.String _Developer;
        partial void OnDeveloperChanging(global::System.String value);
        partial void OnDeveloperChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentRatingID
        {
            get
            {
                return _ContentRatingID;
            }
            set
            {
                OnContentRatingIDChanging(value);
                ReportPropertyChanging("ContentRatingID");
                _ContentRatingID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentRatingID");
                OnContentRatingIDChanged();
            }
        }
        private global::System.String _ContentRatingID;
        partial void OnContentRatingIDChanging(global::System.String value);
        partial void OnContentRatingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlatformID
        {
            get
            {
                return _PlatformID;
            }
            set
            {
                OnPlatformIDChanging(value);
                ReportPropertyChanging("PlatformID");
                _PlatformID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlatformID");
                OnPlatformIDChanged();
            }
        }
        private global::System.Int32 _PlatformID;
        partial void OnPlatformIDChanging(global::System.Int32 value);
        partial void OnPlatformIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Game_ContentRatingID", "ContentRating")]
        public ContentRating ContentRating
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentRating>("CCModel.FK_Game_ContentRatingID", "ContentRating").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentRating>("CCModel.FK_Game_ContentRatingID", "ContentRating").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentRating> ContentRatingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentRating>("CCModel.FK_Game_ContentRatingID", "ContentRating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentRating>("CCModel.FK_Game_ContentRatingID", "ContentRating", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Game_ItemID", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_Game_ItemID", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_Game_ItemID", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("CCModel.FK_Game_ItemID", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("CCModel.FK_Game_ItemID", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Game_Platform", "Platform")]
        public Platform Platform
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("CCModel.FK_Game_Platform", "Platform").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("CCModel.FK_Game_Platform", "Platform").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Platform> PlatformReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Platform>("CCModel.FK_Game_Platform", "Platform");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Platform>("CCModel.FK_Game_Platform", "Platform", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Genre CreateGenre(global::System.Int32 id, global::System.String description)
        {
            Genre genre = new Genre();
            genre.ID = id;
            genre.Description = description;
            return genre;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.String _TypeID;
        partial void OnTypeIDChanging(global::System.String value);
        partial void OnTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Genre_ItemType", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Genre_ItemType", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Genre_ItemType", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Genre_ItemType", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("CCModel.FK_Genre_ItemType", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "ItemGenre", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("CCModel.ItemGenre", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("CCModel.ItemGenre", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        public static Item CreateItem(global::System.Int32 id, global::System.String title, global::System.String typeID, global::System.Int32 userID)
        {
            Item item = new Item();
            item.ID = id;
            item.Title = title;
            item.TypeID = typeID;
            item.UserID = userID;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PictureID
        {
            get
            {
                return _PictureID;
            }
            set
            {
                OnPictureIDChanging(value);
                ReportPropertyChanging("PictureID");
                _PictureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PictureID");
                OnPictureIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PictureID;
        partial void OnPictureIDChanging(Nullable<global::System.Int32> value);
        partial void OnPictureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReleaseDate
        {
            get
            {
                return _ReleaseDate;
            }
            set
            {
                OnReleaseDateChanging(value);
                ReportPropertyChanging("ReleaseDate");
                _ReleaseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReleaseDate");
                OnReleaseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReleaseDate;
        partial void OnReleaseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReleaseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeriesID
        {
            get
            {
                return _SeriesID;
            }
            set
            {
                OnSeriesIDChanging(value);
                ReportPropertyChanging("SeriesID");
                _SeriesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeriesID");
                OnSeriesIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SeriesID;
        partial void OnSeriesIDChanging(Nullable<global::System.Int32> value);
        partial void OnSeriesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.String _TypeID;
        partial void OnTypeIDChanging(global::System.String value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Publisher
        {
            get
            {
                return _Publisher;
            }
            set
            {
                OnPublisherChanging(value);
                ReportPropertyChanging("Publisher");
                _Publisher = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Publisher");
                OnPublisherChanged();
            }
        }
        private global::System.String _Publisher;
        partial void OnPublisherChanging(global::System.String value);
        partial void OnPublisherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Book_ItemID", "Book")]
        public Book Book
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("CCModel.FK_Book_ItemID", "Book").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("CCModel.FK_Book_ItemID", "Book").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Book> BookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Book>("CCModel.FK_Book_ItemID", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Book>("CCModel.FK_Book_ItemID", "Book", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_CollectionItem_Item", "CollectionItem")]
        public EntityCollection<CollectionItem> CollectionItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionItem>("CCModel.FK_CollectionItem_Item", "CollectionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionItem>("CCModel.FK_CollectionItem_Item", "CollectionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_ComicBook_Item", "ComicBook")]
        public ComicBook ComicBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComicBook>("CCModel.FK_ComicBook_Item", "ComicBook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComicBook>("CCModel.FK_ComicBook_Item", "ComicBook").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ComicBook> ComicBookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ComicBook>("CCModel.FK_ComicBook_Item", "ComicBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ComicBook>("CCModel.FK_ComicBook_Item", "ComicBook", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Game_ItemID", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("CCModel.FK_Game_ItemID", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("CCModel.FK_Game_ItemID", "Game").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("CCModel.FK_Game_ItemID", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("CCModel.FK_Game_ItemID", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Item_ItemType", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Item_ItemType", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Item_ItemType", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("CCModel.FK_Item_ItemType", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("CCModel.FK_Item_ItemType", "ItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Item_PictureID", "Picture")]
        public Picture Picture
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("CCModel.FK_Item_PictureID", "Picture").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("CCModel.FK_Item_PictureID", "Picture").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Picture> PictureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Picture>("CCModel.FK_Item_PictureID", "Picture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Picture>("CCModel.FK_Item_PictureID", "Picture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Item_Series", "Series")]
        public Series Series
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("CCModel.FK_Item_Series", "Series").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("CCModel.FK_Item_Series", "Series").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Series> SeriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Series>("CCModel.FK_Item_Series", "Series");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Series>("CCModel.FK_Item_Series", "Series", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "ItemGenre", "Genre")]
        public EntityCollection<Genre> Genres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Genre>("CCModel.ItemGenre", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Genre>("CCModel.ItemGenre", "Genre", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="ItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ItemType CreateItemType(global::System.String id, global::System.String name)
        {
            ItemType itemType = new ItemType();
            itemType.ID = id;
            itemType.Name = name;
            return itemType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Collection_TypeID", "Collection")]
        public EntityCollection<Collection> Collections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Collection>("CCModel.FK_Collection_TypeID", "Collection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Collection>("CCModel.FK_Collection_TypeID", "Collection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Genre_ItemType", "Genre")]
        public EntityCollection<Genre> Genres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Genre>("CCModel.FK_Genre_ItemType", "Genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Genre>("CCModel.FK_Genre_ItemType", "Genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Item_ItemType", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("CCModel.FK_Item_ItemType", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("CCModel.FK_Item_ItemType", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="director">Initial value of the Director property.</param>
        public static Movie CreateMovie(global::System.Int32 itemID, global::System.String director)
        {
            Movie movie = new Movie();
            movie.ItemID = itemID;
            movie.Director = director;
            return movie;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Director
        {
            get
            {
                return _Director;
            }
            set
            {
                OnDirectorChanging(value);
                ReportPropertyChanging("Director");
                _Director = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Director");
                OnDirectorChanged();
            }
        }
        private global::System.String _Director;
        partial void OnDirectorChanging(global::System.String value);
        partial void OnDirectorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Writer
        {
            get
            {
                return _Writer;
            }
            set
            {
                OnWriterChanging(value);
                ReportPropertyChanging("Writer");
                _Writer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Writer");
                OnWriterChanged();
            }
        }
        private global::System.String _Writer;
        partial void OnWriterChanging(global::System.String value);
        partial void OnWriterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Producer
        {
            get
            {
                return _Producer;
            }
            set
            {
                OnProducerChanging(value);
                ReportPropertyChanging("Producer");
                _Producer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Producer");
                OnProducerChanged();
            }
        }
        private global::System.String _Producer;
        partial void OnProducerChanging(global::System.String value);
        partial void OnProducerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Format
        {
            get
            {
                return _Format;
            }
            set
            {
                OnFormatChanging(value);
                ReportPropertyChanging("Format");
                _Format = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Format");
                OnFormatChanged();
            }
        }
        private global::System.String _Format;
        partial void OnFormatChanging(global::System.String value);
        partial void OnFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentRatingID
        {
            get
            {
                return _ContentRatingID;
            }
            set
            {
                OnContentRatingIDChanging(value);
                ReportPropertyChanging("ContentRatingID");
                _ContentRatingID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentRatingID");
                OnContentRatingIDChanged();
            }
        }
        private global::System.String _ContentRatingID;
        partial void OnContentRatingIDChanging(global::System.String value);
        partial void OnContentRatingIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Movie_ItemID", "ContentRating")]
        public ContentRating ContentRating
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentRating>("CCModel.FK_Movie_ItemID", "ContentRating").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentRating>("CCModel.FK_Movie_ItemID", "ContentRating").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContentRating> ContentRatingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContentRating>("CCModel.FK_Movie_ItemID", "ContentRating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContentRating>("CCModel.FK_Movie_ItemID", "ContentRating", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Picture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Picture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Picture object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="pictureBytes">Initial value of the pictureBytes property.</param>
        public static Picture CreatePicture(global::System.Int32 id, global::System.Byte[] pictureBytes)
        {
            Picture picture = new Picture();
            picture.ID = id;
            picture.pictureBytes = pictureBytes;
            return picture;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Href
        {
            get
            {
                return _Href;
            }
            set
            {
                OnHrefChanging(value);
                ReportPropertyChanging("Href");
                _Href = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Href");
                OnHrefChanged();
            }
        }
        private global::System.String _Href;
        partial void OnHrefChanging(global::System.String value);
        partial void OnHrefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alt
        {
            get
            {
                return _Alt;
            }
            set
            {
                OnAltChanging(value);
                ReportPropertyChanging("Alt");
                _Alt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alt");
                OnAltChanged();
            }
        }
        private global::System.String _Alt;
        partial void OnAltChanging(global::System.String value);
        partial void OnAltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] pictureBytes
        {
            get
            {
                return StructuralObject.GetValidValue(_pictureBytes);
            }
            set
            {
                OnpictureBytesChanging(value);
                ReportPropertyChanging("pictureBytes");
                _pictureBytes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("pictureBytes");
                OnpictureBytesChanged();
            }
        }
        private global::System.Byte[] _pictureBytes;
        partial void OnpictureBytesChanging(global::System.Byte[] value);
        partial void OnpictureBytesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Item_PictureID", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("CCModel.FK_Item_PictureID", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("CCModel.FK_Item_PictureID", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Platform")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Platform : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Platform object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Platform CreatePlatform(global::System.Int32 id, global::System.String description)
        {
            Platform platform = new Platform();
            platform.ID = id;
            platform.Description = description;
            return platform;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Game_Platform", "Game")]
        public EntityCollection<Game> Games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Game>("CCModel.FK_Game_Platform", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Game>("CCModel.FK_Game_Platform", "Game", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="Series")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Series : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Series object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Series CreateSeries(global::System.Int32 id, global::System.String name)
        {
            Series series = new Series();
            series.ID = id;
            series.Name = name;
            return series;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Item_Series", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("CCModel.FK_Item_Series", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("CCModel.FK_Item_Series", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CCModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String password, global::System.String email, global::System.DateTime creationDate, global::System.DateTime lastLoginDate, global::System.Boolean isApproved, global::System.Boolean isLockedOut)
        {
            User user = new User();
            user.ID = id;
            user.Username = username;
            user.Password = password;
            user.Email = email;
            user.CreationDate = creationDate;
            user.LastLoginDate = lastLoginDate;
            user.IsApproved = isApproved;
            user.IsLockedOut = isLockedOut;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityQuestion
        {
            get
            {
                return _SecurityQuestion;
            }
            set
            {
                OnSecurityQuestionChanging(value);
                ReportPropertyChanging("SecurityQuestion");
                _SecurityQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityQuestion");
                OnSecurityQuestionChanged();
            }
        }
        private global::System.String _SecurityQuestion;
        partial void OnSecurityQuestionChanging(global::System.String value);
        partial void OnSecurityQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityAnswer
        {
            get
            {
                return _SecurityAnswer;
            }
            set
            {
                OnSecurityAnswerChanging(value);
                ReportPropertyChanging("SecurityAnswer");
                _SecurityAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityAnswer");
                OnSecurityAnswerChanged();
            }
        }
        private global::System.String _SecurityAnswer;
        partial void OnSecurityAnswerChanging(global::System.String value);
        partial void OnSecurityAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CCModel", "FK_Collection_UserID", "Collection")]
        public EntityCollection<Collection> Collections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Collection>("CCModel.FK_Collection_UserID", "Collection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Collection>("CCModel.FK_Collection_UserID", "Collection", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
